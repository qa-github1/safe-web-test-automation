name: Run Cypress Tests on Self-Hosted Windows Machine

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - pentest
          - secure
      api_timeout:
        description: 'Choose the API timeout'
        required: true
        default: '60000'
        type: choice
        options:
          - 30000
          - 80000
          - 90000
      command_timeout:
        description: 'Choose the command timeout'
        required: true
        default: '60000'
        type: choice
        options:
          - 30000
          - 80000
          - 90000

permissions: write-all

jobs:
  cypress-tests:
    runs-on: self-hosted
    timeout-minutes: 250

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests in parallel with manual result tracking
        shell: powershell
        run: |
          $ENVIRONMENT = "${{ github.event.inputs.environment }}"
          if (-not $ENVIRONMENT) { $ENVIRONMENT = "dev" }

          $API_TIMEOUT = "${{ github.event.inputs.api_timeout }}"
          $COMMAND_TIMEOUT = "${{ github.event.inputs.command_timeout }}"

          Write-Host "Running Cypress tests in parallel on Windows self-hosted runner..."

          $specs = @(
            @{ spec = "src/specs/smoke/main-actions-org1.js"; org = 1 },
            @{ spec = "src/specs/smoke/main-actions-org2.js"; org = 2 },
            @{ spec = "src/specs/smoke/services-org3.js"; org = 3 },
            @{ spec = "src/specs/smoke/services-org4.js"; org = 4 }
          )

          $processes = @()

          foreach ($s in $specs) {
            $logFile = "cypress-org-$($s.org).log"
            $cmd = "npx cypress run --headless --browser chrome --record " +
                   "--key fe33f9bd-6aca-4be4-965b-9f726b827c82 " +
                   "--group `"org-$($s.org)`" " +
                   "--ci-build-id `"${{ github.run_id }}`" " +
                   "--spec `"$($s.spec)`" " +
                   "--env `"environment=$ENVIRONMENT,orgNum=$($s.org),apiTimeout=$API_TIMEOUT,defaultCommandTimeout=$COMMAND_TIMEOUT`" " +
                   "*> `"$logFile`"; exit `$LASTEXITCODE"

            Write-Host "Starting Cypress for org $($s.org)..."
            $proc = Start-Process powershell -ArgumentList "-NoProfile", "-Command", $cmd -PassThru
            $processes += [PSCustomObject]@{
              Org = $s.org
              Process = $proc
              Log = $logFile
            }
          }

          $failed = $false

          foreach ($p in $processes) {
            $p.Process.WaitForExit()
            Write-Host "`n===== Log for org $($p.Org) ====="
            Get-Content $p.Log
            if ($p.Process.ExitCode -ne 0) {
              Write-Host "❌ Cypress failed for org $($p.Org)"
              $failed = $true
            } else {
              Write-Host "✅ Cypress passed for org $($p.Org)"
            }
          }

          if ($failed) {
            Write-Error "One or more Cypress specs failed."
            exit 1
          }

  slack-notification:
    runs-on: ubuntu-latest
    needs: [ cypress-tests ]
    if: always()
    steps:
      - name: Set date
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Cypress Dashboard: https://cloud.cypress.io/projects/8ismn2/branches/smj-amn-branch/runs\nReport URL: https://safe-qa.github.io/report_${{ env.NOW }}'
          SLACK_TITLE: Cypress Test Results
          SLACK_USERNAME: Cypress_Tests
