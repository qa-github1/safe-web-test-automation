name: Run Cypress Tests on Self-Hosted Windows Machine

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - pentest
          - secure
      api_timeout:
        description: 'Choose the API timeout'
        required: true
        default: '60000'
        type: choice
        options:
          - 30000
          - 80000
          - 90000
      command_timeout:
        description: 'Choose the command timeout'
        required: true
        default: '60000'
        type: choice
        options:
          - 30000
          - 80000
          - 90000

permissions: write-all

jobs:
  cypress-tests:
    runs-on: self-hosted
    timeout-minutes: 250

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests in parallel
        shell: pwsh
        run: |
          $ENVIRONMENT = "${{ github.event.inputs.environment }}"
          if (-not $ENVIRONMENT) { $ENVIRONMENT = "dev" }

          $API_TIMEOUT = "${{ github.event.inputs.api_timeout }}"
          $COMMAND_TIMEOUT = "${{ github.event.inputs.command_timeout }}"

          Write-Host "Running Cypress tests in parallel on Windows self-hosted runner..."

          $specs = @(
            @{ spec = "src/specs/smoke/main-actions-org1.js"; org = 1 },
            @{ spec = "src/specs/smoke/main-actions-org2.js"; org = 2 },
            @{ spec = "src/specs/smoke/services-org3.js"; org = 3 },
            @{ spec = "src/specs/smoke/services-org4.js"; org = 4 }
          )

          $jobs = @()

          foreach ($s in $specs) {
            $cmd = "npx cypress run --headless --browser chrome --record " +
                   "--key fe33f9bd-6aca-4be4-965b-9f726b827c82 " +
                   "--group `"org-$($s.org)`" " +
                   "--ci-build-id `"${{ github.run_id }}`" " +
                   "--spec `"$($s.spec)`" " +
                   "--env `"environment=$ENVIRONMENT,orgNum=$($s.org),apiTimeout=$API_TIMEOUT,defaultCommandTimeout=$COMMAND_TIMEOUT`""

            Write-Host "Starting job for org $($s.org)..."
            $jobs += Start-Job -ScriptBlock { param($c) Invoke-Expression $c } -ArgumentList $cmd
          }

          $jobs | ForEach-Object { Receive-Job -Job $_ -Wait }

  slack-notification:
    runs-on: ubuntu-latest
    needs: [ cypress-tests ]
    if: always()
    steps:
      - name: Set date
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Cypress Dashboard: https://cloud.cypress.io/projects/8ismn2/branches/smj-amn-branch/runs\nReport URL: https://safe-qa.github.io/report_${{ env.NOW }}'
          SLACK_TITLE: Cypress Test Results
          SLACK_USERNAME: Cypress_Tests
