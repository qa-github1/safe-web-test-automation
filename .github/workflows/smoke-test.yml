on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Choose the environment'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - pentest
          - secure

permissions: write-all

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        include:
          - spec_group: src/specs/smoke/main-actions-org1.js
            org_number: 1
          - spec_group: src/specs/smoke/main-actions-org2.js
            org_number: 2
          - spec_group: src/specs/smoke/services-org3.js
            org_number: 3
          - spec_group: src/specs/smoke/services-org4.js
            org_number: 4

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests
        run: |
          ENVIRONMENT="${{ github.event.inputs.environment }}"
          ENVIRONMENT=${ENVIRONMENT:-dev}

          echo "Running tests for Environment: $ENVIRONMENT"
          echo "Running tests for Org Number: ${{ matrix.org_number }}"

          npx cypress run \
            --headless \
            --browser chrome \
            --record \
            --group "org-${{ matrix.org_number }}" \
            --ci-build-id "${{ github.run_id }}" \
            --spec ${{ matrix.spec_group }} \
            --env environment=$ENVIRONMENT,orgNum=${{ matrix.org_number }}

        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CI: true

      - name: Push report folder to external report-${{ matrix.org_number }} branch
        if: always()
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

          REPORT_BRANCH=report-${{ matrix.org_number }}
          NOW=$(date +'%B_%d')

          git clone https://x-access-token:${{ secrets.TOKEN }}@github.com/Safe-QA/report_${NOW}.git external-repo
          cd external-repo

          if git ls-remote --heads origin $REPORT_BRANCH | grep $REPORT_BRANCH; then
            git checkout $REPORT_BRANCH
          else
            git checkout -b $REPORT_BRANCH
          fi

          rm -rf *
          cp -r ../report/allure-results-${{ matrix.org_number }}/* ./

          echo "🔍 Skipping files larger than 100MB..."
          find . -type f -size +100M -print -delete

          echo "🔐 Scanning .json files for secret-like patterns..."
          for file in $(find . -type f -name "*.json"); do
            if grep -qE '(A3T|AKIA|AGPA|AIDA|ANPA|AROA|ASIA)[A-Z0-9]{16}' "$file"; then
              echo "🚨 Removing suspicious file: $file"
              git rm -f --ignore-unmatch "$file"
            fi
          done

          git add .
          git commit -m "Allure results for org-${{ matrix.org_number }} (with secret-suspect .json files removed)" || echo "No changes to commit"
          git push origin $REPORT_BRANCH || echo "🔁 Push failed again. Manual intervention may be needed."

  merge-and-deploy-final-report:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    needs: [ cypress-tests ]
    if: always()
    steps:
      - name: Set environment variable
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Clone and prepare gh-pages
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

          git clone https://x-access-token:${{ secrets.TOKEN }}@github.com/Safe-QA/report_${NOW}.git merged-repo
          cd merged-repo
          git checkout gh-pages || git checkout -b gh-pages
          
          rm -rf *
          mkdir -p allure-results
          git add .
          git commit -m "Clean gh-pages before merging report branches" || echo "Nothing to commit"
          git push origin gh-pages

      - name: Merge report-1 directly into gh-pages
        run: |
          cd merged-repo
          git fetch origin report-1
          git checkout gh-pages

          git merge origin/report-1 --allow-unrelated-histories --no-ff -m "Merge report-1 into gh-pages" || true
          git checkout --theirs .
          git add .
          git commit -m "Resolve merge conflict by keeping report-1 files" || echo "No changes"
          git push origin gh-pages

      - name: Merge report-2 directly into gh-pages
        run: |
          cd merged-repo
          git fetch origin report-2
          git checkout gh-pages

          git merge origin/report-2 --allow-unrelated-histories --no-ff -m "Merge report-2 into gh-pages" || true
          git checkout --theirs .
          git add .
          git commit -m "Resolve merge conflict by keeping report-2 files" || echo "No changes"
          git push origin gh-pages

      - name: Merge report-3 directly into gh-pages
        run: |
          cd merged-repo
          git fetch origin report-3
          git checkout gh-pages

          git merge origin/report-3 --allow-unrelated-histories --no-ff -m "Merge report-3 into gh-pages" || true
          git checkout --theirs .
          git add .
          git commit -m "Resolve merge conflict by keeping report-3 files" || echo "No changes"
          git push origin gh-pages

      - name: Merge report-4 directly into gh-pages
        run: |
          cd merged-repo
          git fetch origin report-4
          git checkout gh-pages

          git merge origin/report-4 --allow-unrelated-histories --no-ff -m "Merge report-4 into gh-pages" || true
          git checkout --theirs .
          git add .
          git commit -m "Resolve merge conflict by keeping report-4 files" || echo "No changes"
          git push origin gh-pages

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Generate Final Allure Report
        run: |
          cd merged-repo
          git checkout gh-pages
          git pull origin gh-pages

          mkdir -p allure-results
          mv *.json allure-results/ || echo "No .json files to move"
          mv *.png allure-results/ || echo "No .png files to move"

          allure generate allure-results -o allure-report
          rsync -a allure-report/ ./

      - name: Push Final Allure Report
        run: |
          cd merged-repo
          git add .
          git commit -m "Final Allure Report generated from all org reports" || echo "No changes"
          git push origin gh-pages

  slack-notification:
    runs-on: ubuntu-latest
    needs: [ cypress-tests, merge-and-deploy-final-report ]
    if: always()
    steps:
      - name: Set date
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Cypress Dashboard: https://cloud.cypress.io/projects/8ismn2/branches/smj-amn-branch/runs\nReport URL: https://safe-qa.github.io/report_${{ env.NOW }}'
          SLACK_TITLE: Cypress Test Results
          SLACK_USERNAME: Cypress_Tests
