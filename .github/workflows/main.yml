name: Cypress Tests

on: [push]
permissions: write-all

jobs:
  cypress-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        include:
          - spec_group: src/specs/smoke/main-actions.js
            org_number: 1
          - spec_group: src/specs/smoke/services.js
            org_number: 2
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests in parallel
        run: npm run dev-smoke-test-parallel -- --spec ${{ matrix.spec_group }} --env environment=dev,orgNum=${{ matrix.org_number }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CI: true

      - name: Push report folder to external report-${{ matrix.org_number }} branch
        if: always()
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

          REPORT_BRANCH=report-${{ matrix.org_number }}
          NOW=$(date +'%B_%d')

          git clone https://x-access-token:${{ secrets.TOKEN }}@github.com/Safe-QA/report_${NOW}.git external-repo
          cd external-repo

          if git ls-remote --heads origin $REPORT_BRANCH | grep $REPORT_BRANCH; then
            git checkout $REPORT_BRANCH
          else
            git checkout -b $REPORT_BRANCH
          fi

          rm -rf *

          cp -r ../report/allure-results-${{ matrix.org_number }}/* ./

          git add .
          git commit -m "Allure results for org-${{ matrix.org_number }}" || echo "No changes to commit"
          git push origin $REPORT_BRANCH

  merge-and-deploy-final-report:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    needs: [cypress-tests]
    if: always()
    steps:
      - name: Set environment variable
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Clone and prepare gh-pages
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"

          git clone https://x-access-token:${{ secrets.TOKEN }}@github.com/Safe-QA/report_${NOW}.git merged-repo
          cd merged-repo
          git checkout gh-pages || git checkout -b gh-pages
          
          rm -rf *
          mkdir -p allure-results
          git add .
          git commit -m "Clean gh-pages before merging report branches" || echo "Nothing to commit"
          git push origin gh-pages

      - name: Merge report-1 into allure-results
        run: |
          cd merged-repo
          git fetch origin report-1
          git checkout -b temp-report-1 origin/report-1

          mkdir -p ../merged-repo/allure-results/org-1
          cp -r allure-results/* ../merged-repo/allure-results/org-1/

          cd ../merged-repo
          git checkout gh-pages
          git add allure-results
          git commit -m "Add report-1 to allure-results/org-1" || echo "No changes"
          git push origin gh-pages

      - name: Merge report-2 into allure-results
        run: |
          cd merged-repo
          git fetch origin report-2
          git checkout -b temp-report-2 origin/report-2

          mkdir -p ../merged-repo/allure-results/org-2
          cp -r allure-results/* ../merged-repo/allure-results/org-2/

          cd ../merged-repo
          git checkout gh-pages
          git add allure-results
          git commit -m "Add report-2 to allure-results/org-2" || echo "No changes"
          git push origin gh-pages

      - name: Install Allure CLI
        run: npm install -g allure-commandline

      - name: Generate Final Allure Report
        run: |
          cd merged-repo
          mkdir -p merged-results
          cp -r allure-results/org-*/* merged-results/ || echo "No individual reports to merge"
          allure generate merged-results -o .

      - name: Push Final Allure Report
        run: |
          cd merged-repo
          git add .
          git commit -m "Final Allure Report generated from all org reports" || echo "No changes"
          git push origin gh-pages

  slack-notification:
    runs-on: ubuntu-latest
    needs: [cypress-tests, merge-and-deploy-final-report]
    if: always()
    steps:
      - name: Set date
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Report URL: https://safe-qa.github.io/report_${{ env.NOW }}'
          SLACK_TITLE: Cypress Test Results
          SLACK_USERNAME: Cypress_Tests
