name: Cypress Tests

on: [ push ]

permissions: write-all

jobs:

  cypress-org1:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm i

      - name: Run tests
        run: npm run tests-org1

      - name: Deploy report to Github Pages directory
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: temp-reports
          PUBLISH_DIR: report

  cypress-org2:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm i

      - name: Run tests
        run: npm run tests-org2

      - name: Deploy report to Github Pages directory
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: temp-reports
          PUBLISH_DIR: report

  cypress-org3:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm i

      - name: Run tests
        run: npm run tests-org3

      - name: Deploy report to Github Pages directory
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: temp-reports
          PUBLISH_DIR: report

  cypress-org4:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001

    strategy:
      fail-fast: false

    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm i

      - name: Run tests
        run: npm run tests-org4

      - name: Deploy report to Github Pages directory
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: true
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: temp-reports
          PUBLISH_DIR: report

  report:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    needs: [ cypress-org1, cypress-org2, cypress-org3, cypress-org4]
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: temp-reports

      - name: Install dependencies
        run: |
          npm init --yes
          npm i allure-commandline --save-dev

      - name: Merge allure-results-3 folders
        run: |
          cp -rl allure-results-1/ allure-resultss/
          cp -rl allure-results-2/ allure-resultss/
          cp -rl allure-results-3/ allure-resultss/
          cp -rl allure-results-4/ allure-resultss/

      - uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Deploy report to Github Pages directory
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: false
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-resultss

  report-final:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    needs: [report]
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Generate Allure Report
        if: always()
        run: |
          node_modules/allure-commandline/dist/bin/allure generate  allure-resultss -o report

      - name: Deploy report to Github Pages directory
        uses: peaceiris/actions-gh-pages@v2
        with:
          keepFiles: false
        env:
          PERSONAL_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: report
