name: Cypress Tests

on: [push]
permissions: write-all

jobs:
  clean-gh-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Clean gh-pages branch in this repository
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git clone --branch gh-pages https://x-access-token:${{ secrets.TOKEN }}@github.com/${{ github.repository }}.git temp-gh-pages
          cd temp-gh-pages
          # Check if any files exist in the gh-pages branch
          if git ls-files | grep -q .; then
            # Files exist, remove them
            git rm -r * || echo "Nothing to delete"
            git commit -am "Clean gh-pages before redeploy"
            git push origin gh-pages
          else
            echo "No files to delete in gh-pages branch."
          fi

  cypress-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    container:
      image: cypress/browsers:node16.14.2-slim-chrome100-ff99-edge
      options: --user 1001
    needs: clean-gh-pages
    strategy:
      fail-fast: false
      matrix:
        include:
          - spec_group: src/specs/smoke/main-actions.js
            org_number: 1
          - spec_group: src/specs/smoke/services.js
            org_number: 2
    steps:
      - uses: actions/checkout@v2

      - name: Install dependencies
        run: npm ci

      - name: Run Cypress tests in parallel
        run: npm run dev-smoke-test-parallel -- --spec ${{ matrix.spec_group }} --env environment=dev,orgNum=${{ matrix.org_number }}
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CI: true

      - name: Deploy report to report-${{ matrix.org_number }} branch
        if: always()
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          git clone --branch gh-pages https://x-access-token:${{ secrets.TOKEN }}@github.com/${{ github.repository }}.git temp-gh-pages-${{ matrix.org_number }}
          cd temp-gh-pages-${{ matrix.org_number }}
          # Create the report-${{ matrix.org_number }} branch if it doesn't exist
          git checkout -b report-${{ matrix.org_number }} || git checkout report-${{ matrix.org_number }}
          # Deploy the results
          cp -r report/allure-results-${{ matrix.org_number }}/* ./
          git add .
          git commit -m "Deploy allure results for org-${{ matrix.org_number }}"
          git push origin report-${{ matrix.org_number }}

  merge-and-deploy-final-report:
    runs-on: ubuntu-latest
    timeout-minutes: 250
    needs: [cypress-tests]
    if: always()
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          ref: gh-pages

      - name: Merge report-1 and report-2 branches into gh-pages
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "github-actions"
          # Merge report-1 branch
          git fetch origin report-1
          git merge origin/report-1 --no-ff --commit -m "Merge report-1 into gh-pages"
          # Merge report-2 branch
          git fetch origin report-2
          git merge origin/report-2 --no-ff --commit -m "Merge report-2 into gh-pages"
          # Push merged changes to gh-pages
          git push origin gh-pages

  slack-notification:
    runs-on: ubuntu-latest
    needs: [cypress-tests, merge-and-deploy-final-report]
    if: always()
    steps:
      - name: Set date
        run: echo "NOW=$(date +'%B_%d')" >> $GITHUB_ENV

      - name: Send Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}
          SLACK_MESSAGE: 'Report URL: https://safe-qa.github.io/report_${{ env.NOW }}'
          SLACK_TITLE: Cypress Test Results
          SLACK_USERNAME: Cypress_Tests
